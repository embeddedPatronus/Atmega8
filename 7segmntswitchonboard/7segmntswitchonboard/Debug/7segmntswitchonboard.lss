
7segmntswitchonboard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000000c2  00000136  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000014c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000346  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000ab  00000000  00000000  00000c66  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029b  00000000  00000000  00000d11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000c6  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003b  00000000  00000000  000010a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 ec       	ldi	r30, 0xC2	; 194
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 37       	cpi	r26, 0x74	; 116
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a4 e7       	ldi	r26, 0x74	; 116
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a4 37       	cpi	r26, 0x74	; 116
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	31 c0       	rjmp	.+98     	; 0xbe <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:


     #include <avr/io.h>
     #include<util/delay.h>
     int main(void)
     {
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	cd b7       	in	r28, 0x3d	; 61
  64:	de b7       	in	r29, 0x3e	; 62
  66:	64 97       	sbiw	r28, 0x14	; 20
  68:	0f b6       	in	r0, 0x3f	; 63
  6a:	f8 94       	cli
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	0f be       	out	0x3f, r0	; 63
  70:	cd bf       	out	0x3d, r28	; 61
	     int a[]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67};
  72:	de 01       	movw	r26, r28
  74:	11 96       	adiw	r26, 0x01	; 1
  76:	e0 e6       	ldi	r30, 0x60	; 96
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	24 e1       	ldi	r18, 0x14	; 20
  7c:	01 90       	ld	r0, Z+
  7e:	0d 92       	st	X+, r0
  80:	21 50       	subi	r18, 0x01	; 1
  82:	e1 f7       	brne	.-8      	; 0x7c <main+0x1e>
	     DDRB=0X00;
  84:	17 ba       	out	0x17, r1	; 23
	     DDRD=0XFF;
  86:	2f ef       	ldi	r18, 0xFF	; 255
  88:	21 bb       	out	0x11, r18	; 17
	     int i;
	     while(1)
	     {
		   PORTB=0XFE;
  8a:	4e ef       	ldi	r20, 0xFE	; 254
			   
			   }
			 
		 if(i>9)
			 {
				 i=0;
  8c:	20 e0       	ldi	r18, 0x00	; 0
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	01 c0       	rjmp	.+2      	; 0x94 <main+0x36>
  92:	c9 01       	movw	r24, r18
	     DDRB=0X00;
	     DDRD=0XFF;
	     int i;
	     while(1)
	     {
		   PORTB=0XFE;
  94:	48 bb       	out	0x18, r20	; 24
		   if((PINB & 0X01)==0X01)
  96:	b0 9b       	sbis	0x16, 0	; 22
  98:	0e c0       	rjmp	.+28     	; 0xb6 <main+0x58>
		   {PORTD=a[i];
  9a:	fc 01       	movw	r30, r24
  9c:	ee 0f       	add	r30, r30
  9e:	ff 1f       	adc	r31, r31
  a0:	61 e0       	ldi	r22, 0x01	; 1
  a2:	70 e0       	ldi	r23, 0x00	; 0
  a4:	6c 0f       	add	r22, r28
  a6:	7d 1f       	adc	r23, r29
  a8:	e6 0f       	add	r30, r22
  aa:	f7 1f       	adc	r31, r23
  ac:	50 81       	ld	r21, Z
  ae:	52 bb       	out	0x12, r21	; 18
			   i=i++;
  b0:	01 96       	adiw	r24, 0x01	; 1
			   while((PINB&0X01)==0X01);
  b2:	b0 99       	sbic	0x16, 0	; 22
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <main+0x54>
			   
			   }
			 
		 if(i>9)
  b6:	8a 30       	cpi	r24, 0x0A	; 10
  b8:	91 05       	cpc	r25, r1
  ba:	5c f7       	brge	.-42     	; 0x92 <main+0x34>
  bc:	eb cf       	rjmp	.-42     	; 0x94 <main+0x36>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>
