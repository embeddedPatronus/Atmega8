
potndLCD_onATMEGA8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000448  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000016e0  00000000  00000000  0000049c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000522  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 000000c0  00000000  00000000  000020a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000694  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000001c6  00000000  00000000  000027f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000004b7  00000000  00000000  000029ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000a8  00000000  00000000  00002e74  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000012d  00000000  00000000  00002f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000020a  00000000  00000000  00003049  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e8 e4       	ldi	r30, 0x48	; 72
  3a:	f4 e0       	ldi	r31, 0x04	; 4
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	a6 d0       	rcall	.+332    	; 0x1a6 <main>
  5a:	f4 c1       	rjmp	.+1000   	; 0x444 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <cmd>:
void cmd(unsigned int x)
{
PORTB=0X00;
  5e:	18 ba       	out	0x18, r1	; 24
PORTD=x;
  60:	82 bb       	out	0x12, r24	; 18
PORTB |=0X02;
  62:	c1 9a       	sbi	0x18, 1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  64:	87 e8       	ldi	r24, 0x87	; 135
  66:	93 e1       	ldi	r25, 0x13	; 19
  68:	01 97       	sbiw	r24, 0x01	; 1
  6a:	f1 f7       	brne	.-4      	; 0x68 <cmd+0xa>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <cmd+0x10>
  6e:	00 00       	nop
_delay_ms(20);
PORTB=0X00;
  70:	18 ba       	out	0x18, r1	; 24
}
  72:	08 95       	ret

00000074 <dat>:
void dat(unsigned int x)

{PORTB=0X01;
  74:	91 e0       	ldi	r25, 0x01	; 1
  76:	98 bb       	out	0x18, r25	; 24
PORTD=x;
  78:	82 bb       	out	0x12, r24	; 18
PORTB |=0X02;
  7a:	c1 9a       	sbi	0x18, 1	; 24
  7c:	e7 ea       	ldi	r30, 0xA7	; 167
  7e:	f1 e6       	ldi	r31, 0x61	; 97
  80:	31 97       	sbiw	r30, 0x01	; 1
  82:	f1 f7       	brne	.-4      	; 0x80 <dat+0xc>
  84:	00 c0       	rjmp	.+0      	; 0x86 <dat+0x12>
  86:	00 00       	nop
_delay_ms(100);
PORTB=0X01;
  88:	98 bb       	out	0x18, r25	; 24
}
  8a:	08 95       	ret

0000008c <init>:
void init()
{
cmd(0X38);
  8c:	88 e3       	ldi	r24, 0x38	; 56
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	e6 df       	rcall	.-52     	; 0x5e <cmd>
cmd(0X06);
  92:	86 e0       	ldi	r24, 0x06	; 6
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	e3 df       	rcall	.-58     	; 0x5e <cmd>
cmd(0X0E);
  98:	8e e0       	ldi	r24, 0x0E	; 14
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	e0 df       	rcall	.-64     	; 0x5e <cmd>
cmd(0X01);
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	dd df       	rcall	.-70     	; 0x5e <cmd>
}
  a4:	08 95       	ret

000000a6 <digit>:

void digit(unsigned int i)
{
  a6:	ef 92       	push	r14
  a8:	ff 92       	push	r15
  aa:	0f 93       	push	r16
  ac:	1f 93       	push	r17
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	8c 01       	movw	r16, r24
	unsigned int h=i;
	unsigned int k=1;
	
	while(i>9)
  b4:	8a 30       	cpi	r24, 0x0A	; 10
  b6:	91 05       	cpc	r25, r1
  b8:	50 f4       	brcc	.+20     	; 0xce <digit+0x28>
}

void digit(unsigned int i)
{
	unsigned int h=i;
	unsigned int k=1;
  ba:	c1 e0       	ldi	r28, 0x01	; 1
  bc:	d0 e0       	ldi	r29, 0x00	; 0
	
	while(i>9)
	{
		k=k*10;
  be:	20 2f       	mov	r18, r16
  c0:	01 2f       	mov	r16, r17
	}
	while(k>0)
	{
		dat((h/k)+48);
	    h=h%k;
		k=k/10;
  c2:	0f 2e       	mov	r0, r31
  c4:	fa e0       	ldi	r31, 0x0A	; 10
  c6:	ef 2e       	mov	r14, r31
  c8:	ff 24       	eor	r15, r15
  ca:	f0 2d       	mov	r31, r0
  cc:	18 c0       	rjmp	.+48     	; 0xfe <digit+0x58>
}

void digit(unsigned int i)
{
	unsigned int h=i;
	unsigned int k=1;
  ce:	c1 e0       	ldi	r28, 0x01	; 1
  d0:	d0 e0       	ldi	r29, 0x00	; 0
	
	while(i>9)
	{
		k=k*10;
		i=i/10;
  d2:	ea e0       	ldi	r30, 0x0A	; 10
  d4:	f0 e0       	ldi	r31, 0x00	; 0
	unsigned int h=i;
	unsigned int k=1;
	
	while(i>9)
	{
		k=k*10;
  d6:	9e 01       	movw	r18, r28
  d8:	22 0f       	add	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	cc 0f       	add	r28, r28
  de:	dd 1f       	adc	r29, r29
  e0:	cc 0f       	add	r28, r28
  e2:	dd 1f       	adc	r29, r29
  e4:	cc 0f       	add	r28, r28
  e6:	dd 1f       	adc	r29, r29
  e8:	c2 0f       	add	r28, r18
  ea:	d3 1f       	adc	r29, r19
		i=i/10;
  ec:	bf 01       	movw	r22, r30
  ee:	83 d1       	rcall	.+774    	; 0x3f6 <__udivmodhi4>
  f0:	cb 01       	movw	r24, r22
void digit(unsigned int i)
{
	unsigned int h=i;
	unsigned int k=1;
	
	while(i>9)
  f2:	6a 30       	cpi	r22, 0x0A	; 10
  f4:	71 05       	cpc	r23, r1
  f6:	78 f7       	brcc	.-34     	; 0xd6 <digit+0x30>
	{
		k=k*10;
		i=i/10;
	}
	while(k>0)
  f8:	20 97       	sbiw	r28, 0x00	; 0
  fa:	09 f7       	brne	.-62     	; 0xbe <digit+0x18>
  fc:	10 c0       	rjmp	.+32     	; 0x11e <digit+0x78>
	{
		dat((h/k)+48);
  fe:	82 2f       	mov	r24, r18
 100:	90 2f       	mov	r25, r16
 102:	be 01       	movw	r22, r28
 104:	78 d1       	rcall	.+752    	; 0x3f6 <__udivmodhi4>
 106:	18 2f       	mov	r17, r24
 108:	09 2f       	mov	r16, r25
 10a:	cb 01       	movw	r24, r22
 10c:	c0 96       	adiw	r24, 0x30	; 48
 10e:	b2 df       	rcall	.-156    	; 0x74 <dat>
	    h=h%k;
 110:	21 2f       	mov	r18, r17
		k=k/10;
 112:	ce 01       	movw	r24, r28
 114:	b7 01       	movw	r22, r14
 116:	6f d1       	rcall	.+734    	; 0x3f6 <__udivmodhi4>
 118:	eb 01       	movw	r28, r22
	while(i>9)
	{
		k=k*10;
		i=i/10;
	}
	while(k>0)
 11a:	20 97       	sbiw	r28, 0x00	; 0
 11c:	81 f7       	brne	.-32     	; 0xfe <digit+0x58>
	{
		dat((h/k)+48);
	    h=h%k;
		k=k/10;
	}		
	}		
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	0f 91       	pop	r16
 126:	ff 90       	pop	r15
 128:	ef 90       	pop	r14
 12a:	08 95       	ret

0000012c <adc>:
#include <avr/io.h>
#include <util/delay.h>
#include "lcd.h"
void adc()

{float x;
 12c:	0f 93       	push	r16
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
	int y,z;
	    ADMUX=0x00;
 134:	17 b8       	out	0x07, r1	; 7
	ADCSRA =0xC0;
 136:	80 ec       	ldi	r24, 0xC0	; 192
 138:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA&(0x10))==0x00);
 13a:	34 9b       	sbis	0x06, 4	; 6
 13c:	fe cf       	rjmp	.-4      	; 0x13a <adc+0xe>
	x=(ADC*0.005);
 13e:	64 b1       	in	r22, 0x04	; 4
 140:	75 b1       	in	r23, 0x05	; 5
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	66 d0       	rcall	.+204    	; 0x214 <__floatunsisf>
 148:	2a e0       	ldi	r18, 0x0A	; 10
 14a:	37 ed       	ldi	r19, 0xD7	; 215
 14c:	43 ea       	ldi	r20, 0xA3	; 163
 14e:	5b e3       	ldi	r21, 0x3B	; 59
 150:	c7 d0       	rcall	.+398    	; 0x2e0 <__mulsf3>
 152:	06 2f       	mov	r16, r22
 154:	17 2f       	mov	r17, r23
 156:	d8 2f       	mov	r29, r24
 158:	c9 2f       	mov	r28, r25
	y=(x*100);
	z=(y%100);
	
	digit(x);
 15a:	86 2f       	mov	r24, r22
 15c:	91 2f       	mov	r25, r17
 15e:	ad 2f       	mov	r26, r29
 160:	bc 2f       	mov	r27, r28
 162:	bc 01       	movw	r22, r24
 164:	cd 01       	movw	r24, r26
 166:	2a d0       	rcall	.+84     	; 0x1bc <__fixunssfsi>
 168:	dc 01       	movw	r26, r24
 16a:	cb 01       	movw	r24, r22
 16c:	9c df       	rcall	.-200    	; 0xa6 <digit>
	dat('.');
 16e:	8e e2       	ldi	r24, 0x2E	; 46
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	80 df       	rcall	.-256    	; 0x74 <dat>
	int y,z;
	    ADMUX=0x00;
	ADCSRA =0xC0;
	while((ADCSRA&(0x10))==0x00);
	x=(ADC*0.005);
	y=(x*100);
 174:	80 2f       	mov	r24, r16
 176:	91 2f       	mov	r25, r17
 178:	ad 2f       	mov	r26, r29
 17a:	bc 2f       	mov	r27, r28
 17c:	bc 01       	movw	r22, r24
 17e:	cd 01       	movw	r24, r26
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	48 ec       	ldi	r20, 0xC8	; 200
 186:	52 e4       	ldi	r21, 0x42	; 66
 188:	ab d0       	rcall	.+342    	; 0x2e0 <__mulsf3>
 18a:	13 d0       	rcall	.+38     	; 0x1b2 <__fixsfsi>
 18c:	dc 01       	movw	r26, r24
 18e:	cb 01       	movw	r24, r22
	z=(y%100);
 190:	64 e6       	ldi	r22, 0x64	; 100
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	44 d1       	rcall	.+648    	; 0x41e <__divmodhi4>
	
	digit(x);
	dat('.');
	digit(z);
 196:	87 df       	rcall	.-242    	; 0xa6 <digit>
	ADCSRA=0x10;
 198:	80 e1       	ldi	r24, 0x10	; 16
 19a:	86 b9       	out	0x06, r24	; 6
	
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	08 95       	ret

000001a6 <main>:

int main()

{
	
	DDRB=0xFF;
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	87 bb       	out	0x17, r24	; 23
	DDRD=0xFF;
 1aa:	81 bb       	out	0x11, r24	; 17
	
	while(1)

{
	init();
 1ac:	6f df       	rcall	.-290    	; 0x8c <init>
	adc();
 1ae:	be df       	rcall	.-132    	; 0x12c <adc>
 1b0:	fd cf       	rjmp	.-6      	; 0x1ac <main+0x6>

000001b2 <__fixsfsi>:
 1b2:	04 d0       	rcall	.+8      	; 0x1bc <__fixunssfsi>
 1b4:	68 94       	set
 1b6:	b1 11       	cpse	r27, r1
 1b8:	8d c0       	rjmp	.+282    	; 0x2d4 <__fp_szero>
 1ba:	08 95       	ret

000001bc <__fixunssfsi>:
 1bc:	70 d0       	rcall	.+224    	; 0x29e <__fp_splitA>
 1be:	88 f0       	brcs	.+34     	; 0x1e2 <__fixunssfsi+0x26>
 1c0:	9f 57       	subi	r25, 0x7F	; 127
 1c2:	90 f0       	brcs	.+36     	; 0x1e8 <__fixunssfsi+0x2c>
 1c4:	b9 2f       	mov	r27, r25
 1c6:	99 27       	eor	r25, r25
 1c8:	b7 51       	subi	r27, 0x17	; 23
 1ca:	a0 f0       	brcs	.+40     	; 0x1f4 <__fixunssfsi+0x38>
 1cc:	d1 f0       	breq	.+52     	; 0x202 <__fixunssfsi+0x46>
 1ce:	66 0f       	add	r22, r22
 1d0:	77 1f       	adc	r23, r23
 1d2:	88 1f       	adc	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	1a f0       	brmi	.+6      	; 0x1de <__fixunssfsi+0x22>
 1d8:	ba 95       	dec	r27
 1da:	c9 f7       	brne	.-14     	; 0x1ce <__fixunssfsi+0x12>
 1dc:	12 c0       	rjmp	.+36     	; 0x202 <__fixunssfsi+0x46>
 1de:	b1 30       	cpi	r27, 0x01	; 1
 1e0:	81 f0       	breq	.+32     	; 0x202 <__fixunssfsi+0x46>
 1e2:	77 d0       	rcall	.+238    	; 0x2d2 <__fp_zero>
 1e4:	b1 e0       	ldi	r27, 0x01	; 1
 1e6:	08 95       	ret
 1e8:	74 c0       	rjmp	.+232    	; 0x2d2 <__fp_zero>
 1ea:	67 2f       	mov	r22, r23
 1ec:	78 2f       	mov	r23, r24
 1ee:	88 27       	eor	r24, r24
 1f0:	b8 5f       	subi	r27, 0xF8	; 248
 1f2:	39 f0       	breq	.+14     	; 0x202 <__fixunssfsi+0x46>
 1f4:	b9 3f       	cpi	r27, 0xF9	; 249
 1f6:	cc f3       	brlt	.-14     	; 0x1ea <__fixunssfsi+0x2e>
 1f8:	86 95       	lsr	r24
 1fa:	77 95       	ror	r23
 1fc:	67 95       	ror	r22
 1fe:	b3 95       	inc	r27
 200:	d9 f7       	brne	.-10     	; 0x1f8 <__fixunssfsi+0x3c>
 202:	3e f4       	brtc	.+14     	; 0x212 <__fixunssfsi+0x56>
 204:	90 95       	com	r25
 206:	80 95       	com	r24
 208:	70 95       	com	r23
 20a:	61 95       	neg	r22
 20c:	7f 4f       	sbci	r23, 0xFF	; 255
 20e:	8f 4f       	sbci	r24, 0xFF	; 255
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	08 95       	ret

00000214 <__floatunsisf>:
 214:	e8 94       	clt
 216:	09 c0       	rjmp	.+18     	; 0x22a <__floatsisf+0x12>

00000218 <__floatsisf>:
 218:	97 fb       	bst	r25, 7
 21a:	3e f4       	brtc	.+14     	; 0x22a <__floatsisf+0x12>
 21c:	90 95       	com	r25
 21e:	80 95       	com	r24
 220:	70 95       	com	r23
 222:	61 95       	neg	r22
 224:	7f 4f       	sbci	r23, 0xFF	; 255
 226:	8f 4f       	sbci	r24, 0xFF	; 255
 228:	9f 4f       	sbci	r25, 0xFF	; 255
 22a:	99 23       	and	r25, r25
 22c:	a9 f0       	breq	.+42     	; 0x258 <__floatsisf+0x40>
 22e:	f9 2f       	mov	r31, r25
 230:	96 e9       	ldi	r25, 0x96	; 150
 232:	bb 27       	eor	r27, r27
 234:	93 95       	inc	r25
 236:	f6 95       	lsr	r31
 238:	87 95       	ror	r24
 23a:	77 95       	ror	r23
 23c:	67 95       	ror	r22
 23e:	b7 95       	ror	r27
 240:	f1 11       	cpse	r31, r1
 242:	f8 cf       	rjmp	.-16     	; 0x234 <__floatsisf+0x1c>
 244:	fa f4       	brpl	.+62     	; 0x284 <__floatsisf+0x6c>
 246:	bb 0f       	add	r27, r27
 248:	11 f4       	brne	.+4      	; 0x24e <__floatsisf+0x36>
 24a:	60 ff       	sbrs	r22, 0
 24c:	1b c0       	rjmp	.+54     	; 0x284 <__floatsisf+0x6c>
 24e:	6f 5f       	subi	r22, 0xFF	; 255
 250:	7f 4f       	sbci	r23, 0xFF	; 255
 252:	8f 4f       	sbci	r24, 0xFF	; 255
 254:	9f 4f       	sbci	r25, 0xFF	; 255
 256:	16 c0       	rjmp	.+44     	; 0x284 <__floatsisf+0x6c>
 258:	88 23       	and	r24, r24
 25a:	11 f0       	breq	.+4      	; 0x260 <__floatsisf+0x48>
 25c:	96 e9       	ldi	r25, 0x96	; 150
 25e:	11 c0       	rjmp	.+34     	; 0x282 <__floatsisf+0x6a>
 260:	77 23       	and	r23, r23
 262:	21 f0       	breq	.+8      	; 0x26c <__floatsisf+0x54>
 264:	9e e8       	ldi	r25, 0x8E	; 142
 266:	87 2f       	mov	r24, r23
 268:	76 2f       	mov	r23, r22
 26a:	05 c0       	rjmp	.+10     	; 0x276 <__floatsisf+0x5e>
 26c:	66 23       	and	r22, r22
 26e:	71 f0       	breq	.+28     	; 0x28c <__floatsisf+0x74>
 270:	96 e8       	ldi	r25, 0x86	; 134
 272:	86 2f       	mov	r24, r22
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	2a f0       	brmi	.+10     	; 0x284 <__floatsisf+0x6c>
 27a:	9a 95       	dec	r25
 27c:	66 0f       	add	r22, r22
 27e:	77 1f       	adc	r23, r23
 280:	88 1f       	adc	r24, r24
 282:	da f7       	brpl	.-10     	; 0x27a <__floatsisf+0x62>
 284:	88 0f       	add	r24, r24
 286:	96 95       	lsr	r25
 288:	87 95       	ror	r24
 28a:	97 f9       	bld	r25, 7
 28c:	08 95       	ret

0000028e <__fp_split3>:
 28e:	57 fd       	sbrc	r21, 7
 290:	90 58       	subi	r25, 0x80	; 128
 292:	44 0f       	add	r20, r20
 294:	55 1f       	adc	r21, r21
 296:	59 f0       	breq	.+22     	; 0x2ae <__fp_splitA+0x10>
 298:	5f 3f       	cpi	r21, 0xFF	; 255
 29a:	71 f0       	breq	.+28     	; 0x2b8 <__fp_splitA+0x1a>
 29c:	47 95       	ror	r20

0000029e <__fp_splitA>:
 29e:	88 0f       	add	r24, r24
 2a0:	97 fb       	bst	r25, 7
 2a2:	99 1f       	adc	r25, r25
 2a4:	61 f0       	breq	.+24     	; 0x2be <__fp_splitA+0x20>
 2a6:	9f 3f       	cpi	r25, 0xFF	; 255
 2a8:	79 f0       	breq	.+30     	; 0x2c8 <__fp_splitA+0x2a>
 2aa:	87 95       	ror	r24
 2ac:	08 95       	ret
 2ae:	12 16       	cp	r1, r18
 2b0:	13 06       	cpc	r1, r19
 2b2:	14 06       	cpc	r1, r20
 2b4:	55 1f       	adc	r21, r21
 2b6:	f2 cf       	rjmp	.-28     	; 0x29c <__fp_split3+0xe>
 2b8:	46 95       	lsr	r20
 2ba:	f1 df       	rcall	.-30     	; 0x29e <__fp_splitA>
 2bc:	08 c0       	rjmp	.+16     	; 0x2ce <__fp_splitA+0x30>
 2be:	16 16       	cp	r1, r22
 2c0:	17 06       	cpc	r1, r23
 2c2:	18 06       	cpc	r1, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	f1 cf       	rjmp	.-30     	; 0x2aa <__fp_splitA+0xc>
 2c8:	86 95       	lsr	r24
 2ca:	71 05       	cpc	r23, r1
 2cc:	61 05       	cpc	r22, r1
 2ce:	08 94       	sec
 2d0:	08 95       	ret

000002d2 <__fp_zero>:
 2d2:	e8 94       	clt

000002d4 <__fp_szero>:
 2d4:	bb 27       	eor	r27, r27
 2d6:	66 27       	eor	r22, r22
 2d8:	77 27       	eor	r23, r23
 2da:	cb 01       	movw	r24, r22
 2dc:	97 f9       	bld	r25, 7
 2de:	08 95       	ret

000002e0 <__mulsf3>:
 2e0:	0b d0       	rcall	.+22     	; 0x2f8 <__mulsf3x>
 2e2:	78 c0       	rjmp	.+240    	; 0x3d4 <__fp_round>
 2e4:	69 d0       	rcall	.+210    	; 0x3b8 <__fp_pscA>
 2e6:	28 f0       	brcs	.+10     	; 0x2f2 <__mulsf3+0x12>
 2e8:	6e d0       	rcall	.+220    	; 0x3c6 <__fp_pscB>
 2ea:	18 f0       	brcs	.+6      	; 0x2f2 <__mulsf3+0x12>
 2ec:	95 23       	and	r25, r21
 2ee:	09 f0       	breq	.+2      	; 0x2f2 <__mulsf3+0x12>
 2f0:	5a c0       	rjmp	.+180    	; 0x3a6 <__fp_inf>
 2f2:	5f c0       	rjmp	.+190    	; 0x3b2 <__fp_nan>
 2f4:	11 24       	eor	r1, r1
 2f6:	ee cf       	rjmp	.-36     	; 0x2d4 <__fp_szero>

000002f8 <__mulsf3x>:
 2f8:	ca df       	rcall	.-108    	; 0x28e <__fp_split3>
 2fa:	a0 f3       	brcs	.-24     	; 0x2e4 <__mulsf3+0x4>

000002fc <__mulsf3_pse>:
 2fc:	95 9f       	mul	r25, r21
 2fe:	d1 f3       	breq	.-12     	; 0x2f4 <__mulsf3+0x14>
 300:	95 0f       	add	r25, r21
 302:	50 e0       	ldi	r21, 0x00	; 0
 304:	55 1f       	adc	r21, r21
 306:	62 9f       	mul	r22, r18
 308:	f0 01       	movw	r30, r0
 30a:	72 9f       	mul	r23, r18
 30c:	bb 27       	eor	r27, r27
 30e:	f0 0d       	add	r31, r0
 310:	b1 1d       	adc	r27, r1
 312:	63 9f       	mul	r22, r19
 314:	aa 27       	eor	r26, r26
 316:	f0 0d       	add	r31, r0
 318:	b1 1d       	adc	r27, r1
 31a:	aa 1f       	adc	r26, r26
 31c:	64 9f       	mul	r22, r20
 31e:	66 27       	eor	r22, r22
 320:	b0 0d       	add	r27, r0
 322:	a1 1d       	adc	r26, r1
 324:	66 1f       	adc	r22, r22
 326:	82 9f       	mul	r24, r18
 328:	22 27       	eor	r18, r18
 32a:	b0 0d       	add	r27, r0
 32c:	a1 1d       	adc	r26, r1
 32e:	62 1f       	adc	r22, r18
 330:	73 9f       	mul	r23, r19
 332:	b0 0d       	add	r27, r0
 334:	a1 1d       	adc	r26, r1
 336:	62 1f       	adc	r22, r18
 338:	83 9f       	mul	r24, r19
 33a:	a0 0d       	add	r26, r0
 33c:	61 1d       	adc	r22, r1
 33e:	22 1f       	adc	r18, r18
 340:	74 9f       	mul	r23, r20
 342:	33 27       	eor	r19, r19
 344:	a0 0d       	add	r26, r0
 346:	61 1d       	adc	r22, r1
 348:	23 1f       	adc	r18, r19
 34a:	84 9f       	mul	r24, r20
 34c:	60 0d       	add	r22, r0
 34e:	21 1d       	adc	r18, r1
 350:	82 2f       	mov	r24, r18
 352:	76 2f       	mov	r23, r22
 354:	6a 2f       	mov	r22, r26
 356:	11 24       	eor	r1, r1
 358:	9f 57       	subi	r25, 0x7F	; 127
 35a:	50 40       	sbci	r21, 0x00	; 0
 35c:	8a f0       	brmi	.+34     	; 0x380 <__mulsf3_pse+0x84>
 35e:	e1 f0       	breq	.+56     	; 0x398 <__mulsf3_pse+0x9c>
 360:	88 23       	and	r24, r24
 362:	4a f0       	brmi	.+18     	; 0x376 <__mulsf3_pse+0x7a>
 364:	ee 0f       	add	r30, r30
 366:	ff 1f       	adc	r31, r31
 368:	bb 1f       	adc	r27, r27
 36a:	66 1f       	adc	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	88 1f       	adc	r24, r24
 370:	91 50       	subi	r25, 0x01	; 1
 372:	50 40       	sbci	r21, 0x00	; 0
 374:	a9 f7       	brne	.-22     	; 0x360 <__mulsf3_pse+0x64>
 376:	9e 3f       	cpi	r25, 0xFE	; 254
 378:	51 05       	cpc	r21, r1
 37a:	70 f0       	brcs	.+28     	; 0x398 <__mulsf3_pse+0x9c>
 37c:	14 c0       	rjmp	.+40     	; 0x3a6 <__fp_inf>
 37e:	aa cf       	rjmp	.-172    	; 0x2d4 <__fp_szero>
 380:	5f 3f       	cpi	r21, 0xFF	; 255
 382:	ec f3       	brlt	.-6      	; 0x37e <__mulsf3_pse+0x82>
 384:	98 3e       	cpi	r25, 0xE8	; 232
 386:	dc f3       	brlt	.-10     	; 0x37e <__mulsf3_pse+0x82>
 388:	86 95       	lsr	r24
 38a:	77 95       	ror	r23
 38c:	67 95       	ror	r22
 38e:	b7 95       	ror	r27
 390:	f7 95       	ror	r31
 392:	e7 95       	ror	r30
 394:	9f 5f       	subi	r25, 0xFF	; 255
 396:	c1 f7       	brne	.-16     	; 0x388 <__mulsf3_pse+0x8c>
 398:	fe 2b       	or	r31, r30
 39a:	88 0f       	add	r24, r24
 39c:	91 1d       	adc	r25, r1
 39e:	96 95       	lsr	r25
 3a0:	87 95       	ror	r24
 3a2:	97 f9       	bld	r25, 7
 3a4:	08 95       	ret

000003a6 <__fp_inf>:
 3a6:	97 f9       	bld	r25, 7
 3a8:	9f 67       	ori	r25, 0x7F	; 127
 3aa:	80 e8       	ldi	r24, 0x80	; 128
 3ac:	70 e0       	ldi	r23, 0x00	; 0
 3ae:	60 e0       	ldi	r22, 0x00	; 0
 3b0:	08 95       	ret

000003b2 <__fp_nan>:
 3b2:	9f ef       	ldi	r25, 0xFF	; 255
 3b4:	80 ec       	ldi	r24, 0xC0	; 192
 3b6:	08 95       	ret

000003b8 <__fp_pscA>:
 3b8:	00 24       	eor	r0, r0
 3ba:	0a 94       	dec	r0
 3bc:	16 16       	cp	r1, r22
 3be:	17 06       	cpc	r1, r23
 3c0:	18 06       	cpc	r1, r24
 3c2:	09 06       	cpc	r0, r25
 3c4:	08 95       	ret

000003c6 <__fp_pscB>:
 3c6:	00 24       	eor	r0, r0
 3c8:	0a 94       	dec	r0
 3ca:	12 16       	cp	r1, r18
 3cc:	13 06       	cpc	r1, r19
 3ce:	14 06       	cpc	r1, r20
 3d0:	05 06       	cpc	r0, r21
 3d2:	08 95       	ret

000003d4 <__fp_round>:
 3d4:	09 2e       	mov	r0, r25
 3d6:	03 94       	inc	r0
 3d8:	00 0c       	add	r0, r0
 3da:	11 f4       	brne	.+4      	; 0x3e0 <__fp_round+0xc>
 3dc:	88 23       	and	r24, r24
 3de:	52 f0       	brmi	.+20     	; 0x3f4 <__fp_round+0x20>
 3e0:	bb 0f       	add	r27, r27
 3e2:	40 f4       	brcc	.+16     	; 0x3f4 <__fp_round+0x20>
 3e4:	bf 2b       	or	r27, r31
 3e6:	11 f4       	brne	.+4      	; 0x3ec <__fp_round+0x18>
 3e8:	60 ff       	sbrs	r22, 0
 3ea:	04 c0       	rjmp	.+8      	; 0x3f4 <__fp_round+0x20>
 3ec:	6f 5f       	subi	r22, 0xFF	; 255
 3ee:	7f 4f       	sbci	r23, 0xFF	; 255
 3f0:	8f 4f       	sbci	r24, 0xFF	; 255
 3f2:	9f 4f       	sbci	r25, 0xFF	; 255
 3f4:	08 95       	ret

000003f6 <__udivmodhi4>:
 3f6:	aa 1b       	sub	r26, r26
 3f8:	bb 1b       	sub	r27, r27
 3fa:	51 e1       	ldi	r21, 0x11	; 17
 3fc:	07 c0       	rjmp	.+14     	; 0x40c <__udivmodhi4_ep>

000003fe <__udivmodhi4_loop>:
 3fe:	aa 1f       	adc	r26, r26
 400:	bb 1f       	adc	r27, r27
 402:	a6 17       	cp	r26, r22
 404:	b7 07       	cpc	r27, r23
 406:	10 f0       	brcs	.+4      	; 0x40c <__udivmodhi4_ep>
 408:	a6 1b       	sub	r26, r22
 40a:	b7 0b       	sbc	r27, r23

0000040c <__udivmodhi4_ep>:
 40c:	88 1f       	adc	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	5a 95       	dec	r21
 412:	a9 f7       	brne	.-22     	; 0x3fe <__udivmodhi4_loop>
 414:	80 95       	com	r24
 416:	90 95       	com	r25
 418:	bc 01       	movw	r22, r24
 41a:	cd 01       	movw	r24, r26
 41c:	08 95       	ret

0000041e <__divmodhi4>:
 41e:	97 fb       	bst	r25, 7
 420:	09 2e       	mov	r0, r25
 422:	07 26       	eor	r0, r23
 424:	0a d0       	rcall	.+20     	; 0x43a <__divmodhi4_neg1>
 426:	77 fd       	sbrc	r23, 7
 428:	04 d0       	rcall	.+8      	; 0x432 <__divmodhi4_neg2>
 42a:	e5 df       	rcall	.-54     	; 0x3f6 <__udivmodhi4>
 42c:	06 d0       	rcall	.+12     	; 0x43a <__divmodhi4_neg1>
 42e:	00 20       	and	r0, r0
 430:	1a f4       	brpl	.+6      	; 0x438 <__divmodhi4_exit>

00000432 <__divmodhi4_neg2>:
 432:	70 95       	com	r23
 434:	61 95       	neg	r22
 436:	7f 4f       	sbci	r23, 0xFF	; 255

00000438 <__divmodhi4_exit>:
 438:	08 95       	ret

0000043a <__divmodhi4_neg1>:
 43a:	f6 f7       	brtc	.-4      	; 0x438 <__divmodhi4_exit>
 43c:	90 95       	com	r25
 43e:	81 95       	neg	r24
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	08 95       	ret

00000444 <_exit>:
 444:	f8 94       	cli

00000446 <__stop_program>:
 446:	ff cf       	rjmp	.-2      	; 0x446 <__stop_program>
